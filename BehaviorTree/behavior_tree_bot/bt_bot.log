INFO:root:
Selector: High Level Ordering of Strategies
| Sequence: Getting what enemy wants
| | Check: if_neutral_planet_available
| | Check: if_a_good_neutral_available
| | Action: if_a_good_neutral_available_now
| Sequence: Spread Strategy
| | Check: if_neutral_planet_available
| | Check: if_dont_have_enough_neutral
| | Action: spread_to_best_neutral
| Sequence: Offensive Strategy
| | Check: have_largest_fleet
| | Action: attack_weakest_enemy_planet

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 20 9.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 20 9.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 20 9.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 20 9.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 6.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 6.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 6.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 6.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 6.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 6.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 3 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 3 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:20 3 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 3 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 5 28.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 5 29.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 5 25.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 5 26.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 2 24.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:20 19 9.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:20 19 9.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 19 9.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:3 19 9.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:20 4 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 4 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:3 4 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:20 4 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 4 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 4 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:3 4 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:20 9 40.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Bad order:1 38.0 40.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 5 19.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 6 17.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 4 17.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 6 17.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 2 13.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 6 14.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 2 21.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 6 19.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 2 17.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 6 18.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 6 19.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 4 25.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 19 16.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 6 18.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 19 17.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 4 17.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 6 18.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 3 17.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:4 3 26.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 3 17.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 3 18.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 3 18.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 3 25.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 4 21.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 4 21.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 4 17.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 4 18.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 19 18.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 2 20.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 5 31.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 5 22.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 19 19.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 19 20.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 5 21.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 19 22.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 4 19.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 4 26.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 5 23.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 2 21.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 5 18.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 2 32.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 4 29.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 5 24.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 4 26.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 5 26.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 2 24.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 1 24.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 1 21.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 1 21.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 1 21.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 4 18.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 1 19.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 4 17.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 19 16.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 19 28.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 4 30.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 2 43.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 2 40.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 2 35.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 2 32.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:4 3 49.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 3 34.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 3 32.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:4 19 29.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:5 3 31.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 3 32.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 3 30.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:4 19 29.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 2 29.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:6 19 31.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 2 45.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:3 2 100.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:20 2 64.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:19 2 60.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 2 60.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

