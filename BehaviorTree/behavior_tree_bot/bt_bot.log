INFO:root:
Selector: High Level Ordering of Strategies
| Sequence: Getting what enemy wants
| | Check: if_neutral_planet_available
| | Check: if_a_good_neutral_available
| | Action: if_a_good_neutral_available_now
| Sequence: Offensive Strategy
| | Check: have_largest_fleet
| | Action: attack_weakest_enemy_planet
| Sequence: Spread Strategy
| | Check: if_neutral_planet_available
| | Check: if_dont_have_enough_neutral
| | Action: spread_to_best_neutral

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 18 6.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 9 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 9 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 9 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 9 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 9 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 11 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 11 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 2 7.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 17 6.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Bad order:1 12.0 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 12 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:18 11 6.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Bad order:1 13.0 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 5 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:18 2 6.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 12 14.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:18 12 6.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 11 8.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 24.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:18 5 6.5
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Success
DEBUG:root:Result: Sequence: Offensive Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:9 0 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:9 0 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:9 0 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 24.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:9 0 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Bad order:18 23.0 24.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 6 24.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:18 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:18 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:6 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:6 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 20 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:0 21 60.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:1 14 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:20 13 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:20 13 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:21 14 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:21 15 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:21 15 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:20 16 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:20 16 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:21 15 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:20 22 60.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:21 22 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Order:20 3 17
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Success
DEBUG:root:Result: Sequence: Getting what enemy wants -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
ERROR:root:Error in bot.
Traceback (most recent call last):
  File "behavior_tree_bot/bt_bot.py", line 74, in <module>
    behavior_tree.execute(planet_wars)
  File "/Users/pourya/Documents/GitHub/AI/BehaviorTree/behavior_tree_bot/bt_nodes.py", line 8, in logged_fn
    result = fn(self, state)
  File "/Users/pourya/Documents/GitHub/AI/BehaviorTree/behavior_tree_bot/bt_nodes.py", line 52, in execute
    success = child_node.execute(state)
  File "/Users/pourya/Documents/GitHub/AI/BehaviorTree/behavior_tree_bot/bt_nodes.py", line 8, in logged_fn
    result = fn(self, state)
  File "/Users/pourya/Documents/GitHub/AI/BehaviorTree/behavior_tree_bot/bt_nodes.py", line 63, in execute
    continue_execution = child_node.execute(state)
  File "/Users/pourya/Documents/GitHub/AI/BehaviorTree/behavior_tree_bot/bt_nodes.py", line 8, in logged_fn
    result = fn(self, state)
  File "/Users/pourya/Documents/GitHub/AI/BehaviorTree/behavior_tree_bot/bt_nodes.py", line 89, in execute
    return self.action_function(state)
  File "/Users/pourya/Documents/GitHub/AI/BehaviorTree/behavior_tree_bot/behaviors.py", line 55, in spread_to_best_neutral
    + p.num_ships * fleetIm, default=None)
  File "/Users/pourya/Documents/GitHub/AI/BehaviorTree/behavior_tree_bot/behaviors.py", line 55, in <lambda>
    + p.num_ships * fleetIm, default=None)
AttributeError: 'NoneType' object has no attribute 'ID'
