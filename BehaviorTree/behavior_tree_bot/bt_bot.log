INFO:root:
Selector: High Level Ordering of Strategies
| Sequence: Getting what enemy wants
| | Check: if_neutral_planet_available
| | Check: if_a_good_neutral_available
| | Action: if_a_good_neutral_available_now
| Sequence: Spread Strategy
| | Check: if_neutral_planet_available
| | Selector: Spread Selector
| | | Check: if_dont_have_enough_neutral
| | | Check: if_enemy_too_far
| | Check: worth_attacking_neutral
| | Action: spread_to_best_neutral
| Sequence: Offensive Strategy
| | Action: attack_weakest_enemy_planet

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:1 18 6.0
DEBUG:root:Order:1 12 14.0
DEBUG:root:Order:1 17 6.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 9 26.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 11 67.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Bad order:18 22.0 24.0
DEBUG:root:Bad order:18 22.0 24.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:12 17 26.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Order:18 6 24.0
DEBUG:root:Bad order:18 0.0 24.0
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 12 58.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 5 26.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:11 0 17.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:1 18 30.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Success
DEBUG:root:Result: Selector: Spread Selector -> Success
DEBUG:root:Executing:Check: worth_attacking_neutral
DEBUG:root:Result: Check: worth_attacking_neutral -> Success
DEBUG:root:Executing:Action: spread_to_best_neutral
DEBUG:root:Result: Action: spread_to_best_neutral -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:11 17 20.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:12 6 29.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:11 2 62.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:17 19 23.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:2 9 8.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:2 5 13.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Success
DEBUG:root:Executing:Action: if_a_good_neutral_available_now
DEBUG:root:Result: Action: if_a_good_neutral_available_now -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:2 13 38.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:17 6 18.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:9 5 18.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Order:13 19 11.0
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Getting what enemy wants
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: if_a_good_neutral_available
DEBUG:root:Result: Check: if_a_good_neutral_available -> Failure
DEBUG:root:Result: Sequence: Getting what enemy wants -> Failure
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Selector: Spread Selector
DEBUG:root:Executing:Check: if_dont_have_enough_neutral
DEBUG:root:Result: Check: if_dont_have_enough_neutral -> Failure
DEBUG:root:Executing:Check: if_enemy_too_far
DEBUG:root:Result: Check: if_enemy_too_far -> Failure
DEBUG:root:Result: Selector: Spread Selector -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Offensive Strategy
DEBUG:root:Executing:Action: attack_weakest_enemy_planet
DEBUG:root:Result: Action: attack_weakest_enemy_planet -> Failure
DEBUG:root:Result: Sequence: Offensive Strategy -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

